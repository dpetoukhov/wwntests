{
    "collab_server" : "",
    "contents" : "\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n\n# wwntests\n\nThe goal of the wwntests package is to provide an array of white noise\nand independence hypothesis tests for functional data, as well as\nrelated visualizations.\n\n## Installation\n\nYou can install the released version of wwntests from\n[CRAN](https://CRAN.R-project.org) with:\n\n``` r\ninstall.packages(\"wwntests\")\n```\n\n## Example\n\nSuppose that you have observed a sequence of discretely sampled curves\n(note that in Version 1.0.0, all curves have to sampled at the same\npoints). For this example, weâ€™ll generate a sequence of 200 Brownian\nmotion curves, each sampled 100 times.\n\n``` r\ndevtools::load_all()\n#> Loading wwntests\nset.seed(1997)\nb <- brown_motion(200, 100)\n```\n\n### Single- and Multi-Lag Tests\n\nWe might want to ask whether or not our functional data is a weak white\nnoise (certainly it is, as the data generating process is a Brownian\nmotion). The single-lag (and multi-lag) tests allow us to answer this.\nThe single-lag test is a general white noise tests which tests\nhypothesis that the lag-h autocovariance function of the functional data\nis 0. Note, all hypothesis tests are accessbile through the mater\nfunction\n*fport\\_test*.\n\n``` r\nfport_test(f_data = b, test = 'single-lag', lag = 1, suppress_raw_output = TRUE)\n#>  Single-Lag Test\n#> \n#>  null hypothesis: the series is a weak white noise\n#>  p-value = 0.746090\n#>  sample size = 200\n#>  lag = 1\n```\n\nIn a similar vein, the multi-lag test tests the hypothesis that the sum\nof the first K lag-h autocovariance functions of the functional data is\n0.\n\n``` r\nfport_test(f_data = b, test = 'multi-lag', lag = 1, suppress_raw_output = TRUE)\n#>  Multi-Lag Test\n#> \n#>  null hypothesis: the series is a weak white noise\n#>  p-value = 0.775155\n#>  sample size = 200\n#>  maximum lag = 1\n```\n\nWe get p-values that are in line with our null hypothesis given the\nunderlying data generating process. Additonally, a close analogue of the\nsingle-lag test (please see the vignette) has a very intuitive\nvisualization, which is provided throgh the\n*autocorrelation\\_coeff\\_plot* function.\n\n``` r\nautocorrelation_coeff_plot(f_data = b, K = 20)\n```\n\n<img src=\"man/figures/README-unnamed-chunk-3-1.png\" width=\"100%\" />\n\n### Spectral Test\n\nThe spectral test is based on the spectral density operator. It benefits\nfrom being computationally quick, but the drawback is that is it not\ndesigned for general white noise; it may not hold under functional\nconditionally heterscedastic assumptions. If we accept this drawback, we\nmay use the spectral test to test our Brownian motion data.\n\n``` r\nfport_test(f_data = b, test = 'spectral', suppress_raw_output = TRUE)\n#>  Spectral Test\n#> \n#>  null hypothesis: the series is iid\n#>  p-value = 0.852513\n#>  sample size = 200\n#>  kernel function = Bartlett\n#>  bandwidth = 12.445736\n#>  bandwidth selection = adaptive\n```\n\n### Independence Test\n\nThe independence test is a test of independence and identical\ndistribution based on a dimensionality reduction by projecting the\nfunctional data onto its principal components, and working with the\nresulting lagged cross-variances. As in the spectral test, this test\nbenefits from being quite quick, but is again not designed for general\nwhite noise and may not hold under functional conditionally\nheterscedastic\nassumptions.\n\n``` r\nfport_test(f_data = b, test = 'independence', components = 3, lag = 3, suppress_raw_output = TRUE)\n#>  Independence Test\n#> \n#>  null hypothesis: the series is iid\n#>  p-value = 0.544193\n#>  number of principal components = 3\n#>  maximum lag = 3\n```\n",
    "created" : 1560276373384.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1548109611",
    "id" : "949553C5",
    "lastKnownWriteTime" : 1560277985,
    "last_content_update" : 1560277985,
    "path" : "~/wwntests/README.md",
    "project_path" : "README.md",
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "markdown"
}