adaptive_bandwidth(f, kernel = 'Bartlett')
f <- far_1_S(250, 100, 0.75)
adaptive_bandwidth(f, kernel = 'Bartlett')
fport_test(b, test = 'spectral', bandwidth = 1)
devtools::build()
rej_f2 <- list()
for (i in 1:250) {
f <- fgarch_1_1(150, 90, process = 'OU')$Garch
rej_f2[[i]] <- fport_test(f, test = 'spectral', bandwidth = 'adaptive')$p_value < 0.05
}
rej_f2 <- list()
for (i in 1:250) {
f <- fgarch_1_1(150, 90, process = 'OU')$Garch
rej_f2[[i]] <- fport_test(f, test = 'spectral', bandwidth = 'adaptive')$p_value < 0.05
}
Reduce('+', rej_f2)
rej_f3 <- list()
for (i in 1:250) {
f <- fgarch_1_1(150, 90, process = 'OU')$Garch
rej_f3[[i]] <- fport_test(f, test = 'multi-lag', lag = 3)$p_value < 0.05
}
Reduce('+', rej_f3)
rej_f3 <- list()
for (i in 1:250) {
f <- fgarch_1_1(150, 90, process = 'standard')$Garch
rej_f3[[i]] <- fport_test(f, test = 'multi-lag', lag = 3)$p_value < 0.05
}
Reduce('+', rej_f3)
install.packages("fGarch")
rej_f3 <- list()
for (i in 1:250) {
f <- fgarch_1_1(150, 90, process = 'standard')$Garch
rej_f3[[i]] <- fport_test(f, test = 'single-lag', lag = 1)$p_value < 0.05
}
Reduce('+', rej_f3)
rej_f3 <- list()
for (i in 1:250) {
f <- fgarch_1_1(250, 150, process = 'standard')$Garch
rej_f3[[i]] <- fport_test(f, test = 'single-lag', lag = 1)$p_value < 0.05
}
Reduce('+', rej_f3)
rej_f3 <- list()
for (i in 1:250) {
f <- far_1_S(150, 90, 0.75, type = 'fGARCH')
rej_f3[[i]] <- fport_test(f, test = 'single-lag', lag = 1)$p_value < 0.05
}
Reduce('+', rej_f3)
devtools::check_win_release()
devtools::load_all()
devtools::load_all()
devtools::check_win_release()
sprintf("hey \n")
sprintf('hey again \n')
sprintf("hey \n hey agay")
cat("hey \n  hey agay")
cat("\n  null hypothesis:  \np-value =  %f ", '1.214552')
cat("\n  null hypothesis:  \n p-value =  %f ", 1.21451412)
devtools::load_all()
devtools::load_all()
b <- brown_motion(75, 50)
fport_test(b, complete_test = TRUE)
fport_test(b, test = 'multi-lag', lag = 5)
devtools::load_all()
fport_test(b, complete_test = TRUE)
fport_test(b, test = 'multi-lag', lag = 3)
writeLines('hey\n\hey')
writeLines('hey\nhey')
str1 <- 'hey'
writeLines(str1)
writeLines(str1'\nhey')
writeLines(str1+'\nhey')
writeLines(str1 + 'hey')
str1 + 'h'
str1
cat(c('hey', 'ha'))
cat(c('hey', 'ha'), set = '\n')
cat(c('hey\n', 'ha'))
cat(c('hey\n', 'haafafa', 'he'))
cat(c('hey\n', 'haafafa\n', 'he'))
cat(c(' hey\n', 'haafafa\n', 'he'))
s <- sprintf('hey')
s
sprintf('he %s', \hi)
sprintf('he %s', 'hi')
as.character(TRUE)
cat(sprintf('hey'))
cat(sprintf('hey'), '\n', 'hi')
cat(sprintf('hey\n'), '\n', 'hi')
devtools::load_all()
fport_test(b, test = 'multi-lag')
devtools::load_all()
fport_test(b, test = 'multi-lag', lag = 5)
devtools::load_all()
fport_test(b, test = 'multi-lag', lag = 5)
devtools::load_all()
fport_test(b, test = 'multi-lag', lag = 5)
devtools::load_all()
fport_test(b, test = 'multi-lag', lag = 5)
T_stationary(b)
ftsa::T_stationary(b)
devtools::document()
devtools::check_win_release()
devtools::document()
devtools::document()
devtools::check_win_release()
fport_test(b, iid = TRUE, lag = 1)
fport_test(b, iid = TRUE, lag = 1, pretty = TRUE)
devtools::load_all()
fport_test(b, iid = TRUE, lag = 1, pretty = TRUE)
fport_test(b, test = 'multi-lag', lag = 5, iid=TRUE, low_disc = TRUE)
devtools::load_all()
fport_test(b, test = 'multi-lag', lag = 5, iid=TRUE, low_disc = TRUE)
fport_test(b, iid = TRUE, lag = 1, pretty = TRUE)
devtools::load_all()
fport_test(b, iid = TRUE, lag = 1, pretty = TRUE)
devtools::load_all()
devtools::load_all()
?wwntests
devtools::load_all()
fport_test(b, test = 'single-lag')
temp <- fport_test(b, test = 'single-lag')
b <- brown_motion(250, 150)
temp <- fport_test(b, test = 'single-lag')
fport_test(b, complete_test = TRUE)
b <- brown_motion(250, 100)
fport_test(b, complete_test = TRUE)
devtools::load_all()
fport_test(b, complete_test = TRUE)
devtools::load_all()
fport_test(b, complete_test = TRUE)
devtools::load_all()
fport_test(b, complete_test = TRUE)
f <- fgarch_1_1(250, 150)
fport_test(f, complete_test = TRUE)
f <- fgarch_1_1(250, 150)$Garch
fport_test(f, complete_test = TRUE)
fport_test(f, test = 'single-lag', lag = 1)
fport_test(f, test = 'single-lag', lag = 1)$p_value
suppressMessages(fport_test(f, test = 'single-lag', lag = 1)$p_value)
fport_test(f, test = 'single-lag', lag = 3)$p_value
fport_test(f, complete_test = TRUE)
f <- fgarch_1_1(150, 90)
fport_test(f, complete_test = TRUE)
f <- fgarch_1_1(150, 90)$Garch
fport_test(f, complete_test = TRUE)
fport_test(f, complete_test = TRUE)
f <- fgarch_1_1(150, 90)$Garch
f <- fgarch_1_1(250, 150)$Garch
fport_test(f, complete_test = TRUE)
list(1,2,3)
list(1,2,3)[-3]
devtools::load_all()
fport_test(f, complete_test = TRUE)
devtools::load_all()
f <- fgarch_1_1(150, 90, process = 'OU')
fport_test(f, complete_test = TRUE)
f <- fgarch_1_1(150, 90, process = 'OU')$Garch
fport_test(f, complete_test = TRUE)
devtools::load_all()
f <- fgarch_1_1(150, 90, process = 'OU')$Garch
fport_test(f, complete_test = TRUE)
devtools::load_all()
fport_test(f, complete_test = TRUE)
devtools::load_all()
fport_test(f, complete_test = TRUE)
devtools::load_all()
fport_test(f, complete_test = TRUE)
devtools::load_all()
fport_test(f, complete_test = TRUE)
devtools::load_all()
f <- far_1_S(150, 90, 0.75)
fport_test(f, complete_test = TRUE)
f <- far_1_S(150, 90, 0.2)
fport_test(f, complete_test = TRUE)
devtools::check()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::check()
devtools::check()
devtools::check_win_release()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::check()
autocorrelation_coeff_plot(b)
devtools::load_all()
autocorrelation_coeff_plot(b)
2.5 % 1
2.5 %% 1
devtools::load_all()
autocorrelation_coeff_plot(b)
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
fport_test(b, test = 'single-lag')
devtools::document()
devtools::check()
devtools::document()
?single_lag_test
devtools::document()
?single_lag_test
devtools::document()
?single_lag_test
?multi_lag_test
devtools::document()
devtools::load_all()
devtools::check()
single_lag_test(b)
devtools::document()
devtools::load_all()
single_lag_test(b)
devtools::load_all()
devtools::check()
devtools::load_all()
independence_test(b)
independence_test(b, components = 3, suppress_raw_output = TRUE)
independence_test(b, components = 3, suppress_raw_output = TRUE, lag = 3)
devtools::load_all()
independence_test(b, components = 3, suppress_raw_output = TRUE, lag = 3)
devtools::load_all()
independence_test(b, components = 3, lag - 1)
independence_test(b, components = 3, lag = 1)
devtools::load_all()
independence_test(b, components = 3, lag = 1)
devtools::load_all()
independence_test(b, components = 3, lag = 1)
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::document()
?fport_test
devtools::document()
?master_functions
?autocorrelation_coeff_plot
devtools::document()
devtools::load_all()
b <- brown_motion(250, 100)
devtools::document()
?independence_test
devtools::document()
spectral_test(b)
spectral_test(b, suppress_raw_output = TRUE)
daniell_kernel(1)
daniell_kernel(0.5)
daniell_kernel(0.25)
daniell_kernel(0.001)
daniell_kernel(0.00000001)
adaptive_bandwidth(b, kernel = 'Daniell')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Daniell')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Daniell')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Daniell')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Daniell')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Daniell')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Parzen')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Parzen')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Parzen')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Parzen')
adaptive_bandwidth(brown_motion(250, 150), kernel = 'Parzen')
devtools::load_all()
devtools::load_all()
devtools::check()
b <- brown_motion(250, 100)
suppressMessages(independence_test(b, components = 3, lag=3))
capture.output(independence_test(b, components = 3, lag = 3))
invisible(independence_test(b, components = 3, lag = 3))
sink(independence_test(b, components = 3, lag = 3))
capture.output(independence_test(b, components = 3, lag = 3))
invisible(independence_test(b, components = 3, lag = 3))
invisible(capture.output(independence_test(b, components = 3, lag = 3)))
t <- invisible(capture.output(independence_test(b, components = 3, lag = 3)))
t
t <- invisible((independence_test(b, components = 3, lag = 3))
)
quiet(independence_test(b, components = 3, lag = 3))
quiet <- function(x) {
sink(tempfile())
on.exit(sink())
invisible(force(x))
}
quiet(independence_test(b, components = 3, lag = 3))
t<- quiet(independence_test(b, components = 3, lag = 3))
t
devtools::load_all()
single_lag_test(b, lag = 1, suppress_print_output = TRUE)
single_lag_test(b, lag = 1, suppress_raw_output = TRUE)
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
single_lag_test(b, lag = 1, bootstrap = TRUE)
single_lag_test(b, lag = 1)
devtools::load_all()
single_lag_test(b, lag = 1, bootstrap = TRUE)
round(3.5)
round(3.3)
devtools::load_all()
single_lag_test(b, lag = 1, bootstrap = TRUE)
devtools::load_all()
devtools::revdep_check()
source("https://install-github.me/r-lib/revdepcheck")
library(revdepcheck)
library(revdepcheck)
source("https://install-github.me/r-lib/revdepcheck")
library("tibble", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("tibble")
source("https://install-github.me/r-lib/revdepcheck")
library(revdepcheck)
revdep_check()
usethis::use_revdep()
revdep_check(num_workers = 4)
revdep_details()
revdep_details(revdep = 'pkg')
revdep_details(revdep = 'wwntests')
revdepcheck::revdep_check(num_workers = 4)
devtools::revdep_check()
devtools::revdep_check()
revdep_check()
revdep_check_resume()
devtools::revdep_check_resume()
revdepcheck::revdep_check()
devtools::check()
d <- data.frame(matrix(3, nrow = 3, ncol = 3))
d
independence_test(d, components = 3, lag = 3)
independence_test(b, components = 3, lag = 3)
devtools::load_all()
mutli
multi_lag_test(b, lag = 10)
multi_lag_test(b, lag = -1)
single(b, lag = 1, iid = TRUE, low_disc=TRUE)
single_lag_test(b, lag = 1, iid = TRUE, low_disc=TRUE)
single_lag_test(b, lag = 1, iid = TRUE)
devtools::load_all()
single_lag_test(b, lag = 1, iid = TRUE)
single_lag_test(b, lag = 1, iid = TRUE)
devtools::loa
devtools::load_all()
single_lag_test(b, lag = 1, iid = TRUE)
Q_WS_quantile_iid(b, lag  = 1)
devtools::load_all()
Q_WS_quantile_iid(b, lag  = 1)
Q_WS_quantile_iid(b)
single_lag_test(b, lag = 1, iid = TRUE)
devtools::load_all()
single_lag_test(b, lag = 1, iid = TRUE)
single_lag_test(b, lag = 1, iid = TRUE)
single_lag_test(b, iid = TRUE)
Q_WS_quantile_iid(b)
Q_WS_quantile_iid(b)
devtools::load_all()
Q_WS_quantile_iid(b)
single_lag_test(b, iid = TRUE)
devtools::load_all()
devtools::load_all()
devtools::check()
revdep_check()
revdepcheck::revdep_check(pkg='wwntests')
revdepcheck::revdep_check(pkg='.')
revdep_check(pkg='\wwntests')
revdep_check(pkg='/wwntests')
revdep_check(pkg='/wwntests.Rproj')
revdep_check(pkg='\wwntests.Rproj')
revdep_reset()
revdep_check()
devtools::use_revdep()
usethis::use_revdep()
revdep_check()
use_revdep()
revdepcheck::revdep_check(num_workers = 4)
revdepcheck::revdep_check("sde", num_workers = 4)
revdepcheck::revdep_check(sde, num_workers = 4)
devtools::test_coverage()
devtools::test_coverage()
revdep_check('sde')
revdep_report()
revdep_check()
devtools::revdep('sde')
devtools::use_readme_rmd()
devtools::check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
b <- brown_motion(200, 100)
fport_test(f_data = b, test = 'single-lag', lag = 1)
fport_test(f_data = b, test = 'single-lag', lag = 1, suppress_raw_output = TRUE)
fport_test(f_data = b, test = 'multi-lag', lag = 1, suppress_raw_output = TRUE)
autocorrelation_coeff_plot(f_data = b, K = 20)
fport_test(f_data = b, test = 'spectral', suppress_raw_output = TRUE)
fport_test(f_data = b, test = 'independence', components = 3, lag = 3, suppress_raw_output = TRUE)
devtools::load_all()
devtools::use_cran_comments()
devtools::check()
R.version
devtools::check()
devtools::check()
usethis::use_cran_comments()
devtools::check_win_release()
devtools::check_win_devel()
devtools::use_travis()
devtools::check
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
# Note, we pass TRUE to the suppress_raw_output to suppress the list output of the function.
fport_test(f_data = b, test = 'single-lag', lag = 1, suppress_raw_output = TRUE)
library(wwntests)
set.seed(1997)
b <- brown_motion(N = 150, J = 100)
f <- far_1_S(N = 150, J = 100, S = 0.75)
# Note, we pass TRUE to the suppress_raw_output to suppress the list output of the function.
fport_test(f_data = b, test = 'single-lag', lag = 1, suppress_raw_output = TRUE)
fport_test(f_data = f, test = 'single-lag', lag = 1, suppress_raw_output = TRUE)
single_lag_test(f, lag = 1, iid = TRUE)
single_lag_test(f, lag = 1, iid = TRUE, lag = 1)
single_lag_test(f, iid = TRUE)
devtools::load_all()
single_lag_test(f, iid = TRUE)
single_lag_test(f, iid = TRUE, lag = 1)
devtools::load_all()
single_lag_test(f, iid = TRUE, lag = 1)
fgar <- fgarch_1_1(250, 100)
single_lag_test(fgar, lag = 1)
single_lag_test(fgar, lag = 1)
single_lag_test(fgar, lag = 1, iid = TRUE)
spectral_test(fgar)
# Note, we pass TRUE to the suppress_raw_output to suppress the list output of the function.
fport_test(f_data = b, test = 'spectral', kernel = 'Bartlett', bandwidth = 'adaptive',
suppress_raw_output = TRUE)
fport_test(f_data = f, test = 'spectral', kernel = 'Bartlett', bandwidth = 'adaptive',
suppress_raw_output = TRUE)
fgarch <- fgarch_1_1(N = 150, J = 100)
fport_test(f_data = fgarch, test = 'spectral', kernel = 'Bartlett', bandwidth = 'adaptive',
suppress_raw_output = TRUE)
library(wwntests)
set.seed(1997)
b <- brown_motion(N = 150, J = 100)
f <- far_1_S(N = 150, J = 100, S = 0.75)
fgarch <- fgarch_1_1(N = 150, J = 100)
fport_test(f_data = fgarch, test = 'spectral', kernel = 'Bartlett', bandwidth = 'adaptive',
suppress_raw_output = TRUE)
library(wwntests)
set.seed(42)
b <- brown_motion(N = 150, J = 100)
f <- far_1_S(N = 150, J = 100, S = 0.75)
# Note, we pass TRUE to the suppress_raw_output to suppress the list output of the function.
fport_test(f_data = b, test = 'single-lag', lag = 1, suppress_raw_output = TRUE)
fport_test(f_data = f, test = 'single-lag', lag = 1, suppress_raw_output = TRUE)
fport_test(f_data = b, test = 'spectral', kernel = 'Bartlett', bandwidth = 'adaptive',
suppress_raw_output = TRUE)
fport_test(f_data = f, test = 'spectral', kernel = 'Bartlett', bandwidth = 'adaptive',
suppress_raw_output = TRUE)
fgarch <- fgarch_1_1(N = 150, J = 100)
fport_test(f_data = fgarch, test = 'spectral', kernel = 'Bartlett', bandwidth = 'adaptive',
suppress_raw_output = TRUE)
fgarch <- fgarch_1_1(N = 150, J = 100)
fport_test(f_data = fgarch, test = 'spectral', kernel = 'Bartlett', bandwidth = 'adaptive',
suppress_raw_output = TRUE)
install_github('R-package', 'qaundl')
library(devtools)
install_github('jrnold/R-package')
install.packages('devtools')
library(devtools)
if (!require(devtools)) {
install.packages('devtools', repos = "http://cran.us.r-project.org")
}
library(devtools)
install_github('jimthemadmanlahey/wwntests')
install_github('jimthemadmanlahey/wwntests', dependencies = 'Imports')
install.packages("wwntests")
devtools::check()
devtools::check_win_release()
.rs.restartR()
devtools::check_win_devel()
devtools::check()
devtools::load_all()
multi_lag_test(brown_motion(250, 150), lag = 1)
multi_lag_test(brown_motion(250, 150), lag = 1, suppress_raw_output = TRUE, iid = TRUE)
devtools::load_all()
